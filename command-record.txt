
13348@DESKTOP-E86F342 MINGW64 ~
$ git config --global user.name "jjh"

13348@DESKTOP-E86F342 MINGW64 ~
$ git config --global user.email "13313546426@163.com"

13348@DESKTOP-E86F342 MINGW64 ~
$ mkdir learngit

13348@DESKTOP-E86F342 MINGW64 ~
$ cd learngit

13348@DESKTOP-E86F342 MINGW64 ~/learngit
$ pwd
/c/Users/13348/learngit

13348@DESKTOP-E86F342 MINGW64 ~/learngit
$ git init
Initialized empty Git repository in C:/Users/13348/learngit/.git/

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ ls -ah
./  ../  .git/

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git add readme.txt

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git commit -m "wrote a readme file"
[master (root-commit) 0e52af0] wrote a readme file
 1 file changed, 2 insertions(+)
 create mode 100644 readme.txt

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   readme.txt

no changes added to commit (use "git add" and/or "git commit -a")

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git diff readme.txt
diff --git a/readme.txt b/readme.txt
index d8036c1..013b5bc 100644
--- a/readme.txt
+++ b/readme.txt
@@ -1,2 +1,2 @@
-Git is a version control system.
+Git is a distributed version control system.
 Git is free software.
\ No newline at end of file

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git add readme.txt

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        modified:   readme.txt


13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git commit -m "add distibuted"
[master 6023a72] add distibuted
 1 file changed, 1 insertion(+), 1 deletion(-)

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git status
On branch master
nothing to commit, working tree clean

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git add readme.txt

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git commit -m
error: switch `m' requires a value
usage: git commit [<options>] [--] <pathspec>...

    -q, --quiet           suppress summary after successful commit
    -v, --verbose         show diff in commit message template

Commit message options
    -F, --file <file>     read message from file
    --author <author>     override author for commit
    --date <date>         override date for commit
    -m, --message <message>
                          commit message
    -c, --reedit-message <commit>
                          reuse and edit message from specified commit
    -C, --reuse-message <commit>
                          reuse message from specified commit
    --fixup <commit>      use autosquash formatted message to fixup specified commit
    --squash <commit>     use autosquash formatted message to squash specified commit
    --reset-author        the commit is authored by me now (used with -C/-c/--amend)
    -s, --signoff         add Signed-off-by:
    -t, --template <file>
                          use specified template file
    -e, --edit            force edit of commit
    --cleanup <default>   how to strip spaces and #comments from message
    --status              include status in commit message template
    -S, --gpg-sign[=<key-id>]
                          GPG sign commit

Commit contents options
    -a, --all             commit all changed files
    -i, --include         add specified files to index for commit
    --interactive         interactively add files
    -p, --patch           interactively add changes
    -o, --only            commit only specified files
    -n, --no-verify       bypass pre-commit and commit-msg hooks
    --dry-run             show what would be committed
    --short               show status concisely
    --branch              show branch information
    --ahead-behind        compute full ahead/behind values (EXPERIMENTAL)
    --porcelain           machine-readable output
    --long                show status in long format (default)
    -z, --null            terminate entries with NUL
    --amend               amend previous commit
    --no-post-rewrite     bypass post-rewrite hook
    -u, --untracked-files[=<mode>]
                          show untracked files, optional modes: all, normal, no. (Default: all)


13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git commit -m"append GPL"
[master 475dfad] append GPL
 1 file changed, 1 insertion(+), 1 deletion(-)

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git log
commit 475dfad9578bd0e7ec813ecb6003e376949544ba (HEAD -> master)
Author: jjh <13313546426@163.com>
Date:   Mon Apr 9 16:06:33 2018 +0800

    append GPL

commit 6023a7267c329a66ab68134e5e590945bdc902f7
Author: jjh <13313546426@163.com>
Date:   Mon Apr 9 16:01:50 2018 +0800

    add distibuted

commit 0e52af0b4800d1f8ce70a8d605642afe515f41cf
Author: jjh <13313546426@163.com>
Date:   Mon Apr 9 15:44:17 2018 +0800

    wrote a readme file

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git log --pretty=oneline
475dfad9578bd0e7ec813ecb6003e376949544ba (HEAD -> master) append GPL
6023a7267c329a66ab68134e5e590945bdc902f7 add distibuted
0e52af0b4800d1f8ce70a8d605642afe515f41cf wrote a readme file

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git reset --hard HEAD^
HEAD is now at 6023a72 add distibuted

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git log
commit 6023a7267c329a66ab68134e5e590945bdc902f7 (HEAD -> master)
Author: jjh <13313546426@163.com>
Date:   Mon Apr 9 16:01:50 2018 +0800

    add distibuted

commit 0e52af0b4800d1f8ce70a8d605642afe515f41cf
Author: jjh <13313546426@163.com>
Date:   Mon Apr 9 15:44:17 2018 +0800

    wrote a readme file

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git reset -hard 475dfad9578bd0e7ec813ecb6003e376949544ba
error: did you mean `--hard` (with two dashes ?)

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git reset --hard ^C

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git reset --hard 475dfad9578b
HEAD is now at 475dfad append GPL

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git reflog
475dfad (HEAD -> master) HEAD@{0}: reset: moving to 475dfad9578b
6023a72 HEAD@{1}: reset: moving to HEAD^
475dfad (HEAD -> master) HEAD@{2}: commit: append GPL
6023a72 HEAD@{3}: commit: add distibuted
0e52af0 HEAD@{4}: commit (initial): wrote a readme file

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   readme.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        license.txt

no changes added to commit (use "git add" and/or "git commit -a")

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git add readme.txt

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git add licence.txt
fatal: pathspec 'licence.txt' did not match any files

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git add license.txt

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        new file:   license.txt
        modified:   readme.txt


13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git commit -m "understand how stage works"
[master dbccf00] understand how stage works
 2 files changed, 3 insertions(+), 1 deletion(-)
 create mode 100644 license.txt

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git status
On branch master
nothing to commit, working tree clean

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ cat readme.txt
Git is a distributed version control system.
Git is free software distributed under the GPL.
Git has a mutable index called stage.
13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git tracks changes.
git: 'tracks' is not a git command. See 'git --help'.

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git add readme.txt

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        modified:   readme.txt


13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ cat readme.txt
Git is a distributed version control system.
Git is free software distributed under the GPL.
Git has a mutable index called stage.
git tracks changes.
13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ cat readme.txt
Git is a distributed version control system.
Git is free software distributed under the GPL.
Git has a mutable index called stage.
Git tracks changes of files.
13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git commit -m "git track changes"
[master bc0f5aa] git track changes
 1 file changed, 2 insertions(+), 1 deletion(-)

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   readme.txt

no changes added to commit (use "git add" and/or "git commit -a")

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git diff HEAD --readme.txt
usage: git diff [<options>] [<commit> [<commit>]] [--] [<path>...]

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ diff --git a/readme.txt b/readme.txt
diff: unknown option -- git
diff: Try 'diff --help' for more information.

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git diff HEAD -- readme.txt
diff --git a/readme.txt b/readme.txt
index 29a29c5..9a8b341 100644
--- a/readme.txt
+++ b/readme.txt
@@ -1,4 +1,4 @@
 Git is a distributed version control system.
 Git is free software distributed under the GPL.
 Git has a mutable index called stage.
-git tracks changes.
\ No newline at end of file
+Git tracks changes of files.
\ No newline at end of file

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git add readme.txt

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git commit -m "the second revision"
[master 6d09d92] the second revision
 1 file changed, 1 insertion(+), 1 deletion(-)

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git add test.txt

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git commit -m "add test.txt"
[master 14a81be] add test.txt
 1 file changed, 1 insertion(+)
 create mode 100644 test.txt

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ rm test.txt

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        deleted:    test.txt

no changes added to commit (use "git add" and/or "git commit -a")

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git rm test.txt
rm 'test.txt'

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git commit -m "remove test.txt"
[master 6506d9e] remove test.txt
 1 file changed, 1 deletion(-)
 delete mode 100644 test.txt

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git checkout -- test.txt
error: pathspec 'test.txt' did not match any file(s) known to git.

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git checkout -- test.txt
error: pathspec 'test.txt' did not match any file(s) known to git.

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git checkout -- test.txt
error: pathspec 'test.txt' did not match any file(s) known to git.

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git status
On branch master
nothing to commit, working tree clean

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git reset HEAD test.txt

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git status
On branch master
nothing to commit, working tree clean

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git checkout -- test.txt

error: pathspec 'test.txt' did not match any file(s) known to git.

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$
