今日任务：远程库克隆，分支管理
命令以及返回记录：
13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git add command-record.txt

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git diff

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git status
On branch master
Your branch is up to date with 'origin/master'.

Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        new file:   command-record.txt


13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git commit -m "add record"
[master e9bfe32] add record
 1 file changed, 396 insertions(+)
 create mode 100644 command-record.txt

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git status
On branch master
Your branch is ahead of 'origin/master' by 1 commit.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git status
On branch master
Your branch is ahead of 'origin/master' by 1 commit.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git add task-4-10.txt

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git commit -m "in 4-10 the task submittid"
[master e243281] in 4-10 the task submittid
 1 file changed, 2 insertions(+)
 create mode 100644 task-4-10.txt

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git clone git@github.com:huihuitest/gitskills.git
Cloning into 'gitskills'...
remote: Counting objects: 3, done.
remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
Receiving objects: 100% (3/3), done.

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ cd gitskills

13348@DESKTOP-E86F342 MINGW64 ~/learngit/gitskills (master)
$ ls
README.md

13348@DESKTOP-E86F342 MINGW64 ~/learngit/gitskills (master)
$
小结

要克隆一个仓库，首先必须知道仓库的地址，然后使用git clone命令克隆。

Git支持多种协议，包括https，但通过ssh支持的原生git协议速度最快。

分支管理：

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git checkout -b dev
Switched to a new branch 'dev'

13348@DESKTOP-E86F342 MINGW64 ~/learngit (dev)
$ git branch
* dev
  master

13348@DESKTOP-E86F342 MINGW64 ~/learngit (dev)
$ git add readme.txt

13348@DESKTOP-E86F342 MINGW64 ~/learngit (dev)
$ git commit -m "branch test"
[dev b19e03e] branch test
 1 file changed, 1 insertion(+)

13348@DESKTOP-E86F342 MINGW64 ~/learngit (dev)
$ git checkout master
Switched to branch 'master'
Your branch is ahead of 'origin/master' by 5 commits.
  (use "git push" to publish your local commits)

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git merge dev
Updating 4c9d8a7..b19e03e
Fast-forward
 readme.txt | 1 +
 1 file changed, 1 insertion(+)

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git branch -d dev
Deleted branch dev (was b19e03e).

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$ git branch
* master

13348@DESKTOP-E86F342 MINGW64 ~/learngit (master)
$
小结
因为创建、合并和删除分支非常快，所以Git鼓励你使用分支完成某个任务，合并后再删掉分支，这和直接在master分支上工作效果是一样的，但过程更安全。
Git鼓励大量使用分支：

查看分支：git branch

创建分支：git branch <name>

切换分支：git checkout <name>

创建+切换分支：git checkout -b <name>

合并某分支到当前分支：git merge <name>

删除分支：git branch -d <name>